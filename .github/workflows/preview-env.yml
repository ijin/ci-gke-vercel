name: Preview Env

on:
  # pull_request:
  push:
    branches:
      - 'fix-*'
      - 'feat-*'
      - 'refactor-*'

jobs:
  create_preview_env:
    runs-on: ubuntu-latest

    permissions:
        contents: read
        id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ vars.STAGING_WIP }}
          service_account: ${{ vars.STAGING_SERVICE_ACCOUNT }}

      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: ${{ vars.STAGING_GKE_CLUSTER_NAME }}
          location: ${{ vars.STAGING_GKE_CLUSTER_REGION }}

      - name: Port forward hydra admin port
        run: |
          kubectl get svc
          kubectl port-forward svc/hydra-admin 8080:4445 &

      - name: Generate Vercel URI
        run: echo "VERCEL_URI=https://${{ github.ref_name }}-${{ github.repository_owner }}.vercel.app" >> $GITHUB_ENV

      - name: Set redirect_uris and post_logout_redirect_uris in hydra
        run: |
          CLIENT=$(curl -s localhost:8080/clients/${{ secrets.STAGING_CLIENT_ID }} | jq .)
          UPDATED_REDIRECT_URIS=$(echo $CLIENT | jq  '.redirect_uris += ["'"$VERCEL_URI"'/api/auth/callback/ocx-idp"] | .redirect_uris | unique')
          UPDATED_POST_LOGOUT_URIS=$(echo $CLIENT | jq  '.post_logout_redirect_uris += ["'"$VERCEL_URI"'"] | .post_logout_redirect_uris | unique')
          curl -s -X PATCH "http://localhost:8080/clients/${{ secrets.STAGING_CLIENT_ID }}" -H 'Content-Type: application/json' -d "[{\"op\": \"replace\", \"path\": \"/redirect_uris\", \"value\": $UPDATED_REDIRECT_URIS}]"
          curl -s -X PATCH "http://localhost:8080/clients/${{ secrets.STAGING_CLIENT_ID }}" -H 'Content-Type: application/json' -d "[{\"op\": \"replace\", \"path\": \"/post_logout_redirect_uris\", \"value\": $UPDATED_POST_LOGOUT_URIS}]"

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Set Vercel env var
        run: echo $VERCEL_URI | vercel env add NEXTAUTH_URL preview ${{ github.ref_name }} --token=${{ secrets.VERCEL_TOKEN }}
